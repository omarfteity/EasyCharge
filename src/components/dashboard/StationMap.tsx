import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Navigation, MapPin, AlertCircle, Maximize2 } from "lucide-react";
import { Dialog, DialogContent } from "@/components/ui/dialog";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";

interface Station {
  id: string;
  name: string;
  address: string;
  available: boolean;
  distance: string;
  coordinates: [number, number];
}

interface StationMapProps {
  stations?: Station[];
  onStationSelect?: (station: Station) => void;
  onNavigate?: (station: Station) => void;
  onSetAlert?: (station: Station) => void;
  className?: string;
}

const defaultStations: Station[] = [
  {
    id: "1",
    name: "Downtown Charging Hub",
    address: "123 Main St, City Center",
    available: true,
    distance: "0.5 mi",
    coordinates: [37.7749, -122.4194],
  },
  {
    id: "2",
    name: "Westside Power Station",
    address: "456 West Ave, Westside",
    available: false,
    distance: "1.2 mi",
    coordinates: [37.7833, -122.4167],
  },
  {
    id: "3",
    name: "East End Express Charge",
    address: "789 East Blvd, Eastside",
    available: true,
    distance: "0.8 mi",
    coordinates: [37.7858, -122.4008],
  },
];

const StationMap = ({
  stations = defaultStations,
  onStationSelect = () => {},
  onNavigate = () => {},
  onSetAlert = () => {},
  className = "",
}: StationMapProps) => {
  const [isExpanded, setIsExpanded] = React.useState(false);

  return (
    <Card className={`w-full ${className}`}>
      <CardContent className="p-4 bg-white">
        <div className="flex flex-col h-full">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold">Nearby Charging Stations</h2>
            <div className="flex items-center gap-4">
              <div className="flex items-center gap-2">
                <span className="flex items-center gap-1">
                  <div className="w-3 h-3 rounded-full bg-green-500"></div>
                  Available
                </span>
                <span className="flex items-center gap-1">
                  <div className="w-3 h-3 rounded-full bg-red-500"></div>
                  Occupied
                </span>
              </div>
              <Button
                variant="outline"
                size="icon"
                onClick={() => setIsExpanded(true)}
              >
                <Maximize2 className="h-4 w-4" />
              </Button>
            </div>
          </div>

          <div
            className="relative flex-1 bg-gray-100 rounded-lg mb-4 overflow-hidden cursor-pointer"
            onClick={() => setIsExpanded(true)}
          >

            {/* Station markers overlay */}
            <div className="absolute inset-0">
              {stations.map((station) => (
                <TooltipProvider key={station.id}>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <Button
                        variant="ghost"
                        className={`absolute ${station.id === "1" ? "top-1/4 left-1/4" : ""} 
                                ${station.id === "2" ? "top-1/2 left-1/2" : ""} 
                                ${station.id === "3" ? "bottom-1/4 right-1/4" : ""}
                                w-8 h-8 p-1 rounded-full ${station.available ? "bg-green-500" : "bg-red-500"}`}
                        onClick={(e) => {
                          e.stopPropagation();
                          onStationSelect(station);
                        }}
                      >
                        <MapPin className="w-4 h-4 text-white" />
                      </Button>
                    </TooltipTrigger>
                    <TooltipContent>
                      <p className="font-semibold">{station.name}</p>
                      <p className="text-sm">{station.distance} away</p>
                    </TooltipContent>
                  </Tooltip>
                </TooltipProvider>
              ))}
            </div>
          </div>

          <div className="space-y-2">
            {stations.map((station) => (
              <div
                key={station.id}
                className="flex items-center justify-between p-2 bg-gray-50 rounded-lg"
              >
                <div className="flex-1">
                  <h3 className="font-medium">{station.name}</h3>
                  <p className="text-sm text-gray-500">{station.address}</p>
                  <p className="text-sm text-gray-500">
                    {station.distance} away
                  </p>
                </div>
                <div className="flex gap-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => onNavigate(station)}
                  >
                    <Navigation className="w-4 h-4 mr-1" />
                    Navigate
                  </Button>
                  {!station.available && (
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={() => onSetAlert(station)}
                    >
                      <AlertCircle className="w-4 h-4 mr-1" />
                      Set Alert
                    </Button>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      </CardContent>

      {/* Expanded Map Dialog */}
      <Dialog open={isExpanded} onOpenChange={setIsExpanded}>
        <DialogContent className="max-w-[90vw] max-h-[90vh] w-full h-full p-6">
          <div className="h-[80vh] bg-gray-100 rounded-lg">
            <img
              src="https://images.unsplash.com/photo-1524661135-423995f22d0b?w=1600&q=80"
              alt="Map background"
              className="w-full h-full object-cover opacity-90"
              style={{ filter: "saturate(0.8) hue-rotate(10deg)" }}
            />
          </div>
        </DialogContent>
      </Dialog>
    </Card>
  );
};

export default StationMap;
